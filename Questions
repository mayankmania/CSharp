Delegates
1)What are the three types of Generic delegates in C#?
Below are the three types of generic delegates in C# -

Func
Action
Predicate


2) Can we use delegates for asynchronous method calls in C#?
Yes. We can use delegates for asynchronous method calls.

3) What are the uses of delegates in C#?
Below are the list of uses of delegates in C# -
Callback Mechanism
Asynchronous Processing
Abstract and Encapsulate method
Multicasting

4)What are the differences between events and delegates in C#?
Main difference between event and delegate is event will provide one more of encapsulation over delegates. 
So when you are using events destination will listen to it but delegates are naked, which works in subscriber/destination model.

5) Define Multicast Delegate in C#?
A delegate with multiple handlers are called as multicast delegate. The example to demonstrate the same is given below
public delegate void CalculateMyNumbers(int x, int y);
int x = 6;
int y = 7;
CalculateMyNumbers addMyNumbers = new CalculateMyNumbers(FuncForAddingNumbers);
CalculateMyNumbers multiplyMyNumbers = new CalculateMyNumbers(FuncForMultiplyingNumbers);
CalculateMyNumbers multiCast = (CalculateMyNumbers)Delegate.Combine (addMyNumbers, multiplyMyNumbers);
multiCast.Invoke(a,b);

6) What is the difference between CType and Directcast in C#?
CType is used for conversion between type and the expression.
Directcast is used for converting the object type which requires run time type to be the same as specified type.

7) Why to use lock statement in C#?
Lock will make sure one thread will not intercept the other thread which is running the part of code. So lock statement will make the thread wait, block till the object is being released.

8) Explain Hashtable in C#?
It is used to store the key/value pairs based on hash code of the key. Key will be used to access the element in the collection. For example,

9) What is enum in C#?
enum keyword is used for declaring an enumeration, which consists of named constants and it is called as enumerator lists. Enums are value types in C# and these can’t be inherited. Below is the sample code of using Enums
Eg: enum Fruits { Apple, Orange, Banana, WaterMelon};

10) Write a sample code to write the contents to text file in C#?
Below is the sample code to write the contents to text file –
Using System.IO;
File.WriteAllText(”mytextfilePath”, “MyTestContent”);

11) Explain Copy constructor in C#?

If the constructor contains the same class in the constructor parameter then it is called as copy constructor.

class MyClass
{
 public string prop1, prop2;
 public MyClass(string a, string b)
 {
 prop1 = a;
 prop2 = b;
 }
 
 public MyClass(MyClass myobj) // Copy Constructor
 {
 prop1 = myobj.prop1;
 prop2 = myobj.prop2;
 }
}

12) Explain Indexers in C#?

Indexers are used for allowing the classes to be indexed like arrays. Indexers will resemble the property structure but only difference is indexer’s accessors will take parameters. For example,

class MyCollection<T>
{
 private T[] myArr = new T[100];
 public T this[int t]
 {
 get
 {
 return myArr[t];
 }
 set
 {
 myArr[t] = value;
 }
 }
}

13) What are the collection types can be used in C#?
Below are the collection types in C# -

ArrayList
Stack
Queue
SortedList
HashTable
Bit Array
